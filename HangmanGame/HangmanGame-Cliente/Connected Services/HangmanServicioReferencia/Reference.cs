//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HangmanGame_Cliente.HangmanServicioReferencia {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HangmanServicioReferencia.IHangmanService")]
    public interface IHangmanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/Autenticacion", ReplyAction="http://tempuri.org/IHangmanService/AutenticacionResponse")]
        Biblioteca.DTO.ResponseDTO Autenticacion(string correo, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/Autenticacion", ReplyAction="http://tempuri.org/IHangmanService/AutenticacionResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponseDTO> AutenticacionAsync(string correo, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ObtenerPalabrasPorCategoria", ReplyAction="http://tempuri.org/IHangmanService/ObtenerPalabrasPorCategoriaResponse")]
        Biblioteca.DTO.ResponsePalabrasConIdDTO ObtenerPalabrasPorCategoria(string categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ObtenerPalabrasPorCategoria", ReplyAction="http://tempuri.org/IHangmanService/ObtenerPalabrasPorCategoriaResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePalabrasConIdDTO> ObtenerPalabrasPorCategoriaAsync(string categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/CrearPartida", ReplyAction="http://tempuri.org/IHangmanService/CrearPartidaResponse")]
        Biblioteca.DTO.ResponsePartidaDTO CrearPartida(int idAdivinador, int idPalabra, string codigo, int idIdiomaPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/CrearPartida", ReplyAction="http://tempuri.org/IHangmanService/CrearPartidaResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> CrearPartidaAsync(int idAdivinador, int idPalabra, string codigo, int idIdiomaPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ObtenerPartidasDisponibles", ReplyAction="http://tempuri.org/IHangmanService/ObtenerPartidasDisponiblesResponse")]
        Biblioteca.DTO.ResponsePartidaDTO ObtenerPartidasDisponibles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ObtenerPartidasDisponibles", ReplyAction="http://tempuri.org/IHangmanService/ObtenerPartidasDisponiblesResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> ObtenerPartidasDisponiblesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/UnirsePartida", ReplyAction="http://tempuri.org/IHangmanService/UnirsePartidaResponse")]
        Biblioteca.DTO.ResponsePartidaDTO UnirsePartida(string codigoPartida, int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/UnirsePartida", ReplyAction="http://tempuri.org/IHangmanService/UnirsePartidaResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> UnirsePartidaAsync(string codigoPartida, int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ObtenerEstadoPartida", ReplyAction="http://tempuri.org/IHangmanService/ObtenerEstadoPartidaResponse")]
        Biblioteca.DTO.ResponsePartidaDTO ObtenerEstadoPartida(string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ObtenerEstadoPartida", ReplyAction="http://tempuri.org/IHangmanService/ObtenerEstadoPartidaResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> ObtenerEstadoPartidaAsync(string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/GuardarResultado", ReplyAction="http://tempuri.org/IHangmanService/GuardarResultadoResponse")]
        Biblioteca.DTO.ResponseResultadoDTO GuardarResultado(int idJugador, int idPartida, bool gano, bool esAbandono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/GuardarResultado", ReplyAction="http://tempuri.org/IHangmanService/GuardarResultadoResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponseResultadoDTO> GuardarResultadoAsync(int idJugador, int idPartida, bool gano, bool esAbandono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ObtenerEstadisticasPorJugador", ReplyAction="http://tempuri.org/IHangmanService/ObtenerEstadisticasPorJugadorResponse")]
        Biblioteca.DTO.ResponseEstadisticaDTO ObtenerEstadisticasPorJugador(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ObtenerEstadisticasPorJugador", ReplyAction="http://tempuri.org/IHangmanService/ObtenerEstadisticasPorJugadorResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponseEstadisticaDTO> ObtenerEstadisticasPorJugadorAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/RegistrarJugador", ReplyAction="http://tempuri.org/IHangmanService/RegistrarJugadorResponse")]
        Biblioteca.DTO.ResponseDTO RegistrarJugador(Biblioteca.DTO.JugadorDTO jugadorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/RegistrarJugador", ReplyAction="http://tempuri.org/IHangmanService/RegistrarJugadorResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponseDTO> RegistrarJugadorAsync(Biblioteca.DTO.JugadorDTO jugadorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ActualizarJugador", ReplyAction="http://tempuri.org/IHangmanService/ActualizarJugadorResponse")]
        Biblioteca.DTO.ResponseDTO ActualizarJugador(Biblioteca.DTO.JugadorDTO jugadorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/ActualizarJugador", ReplyAction="http://tempuri.org/IHangmanService/ActualizarJugadorResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponseDTO> ActualizarJugadorAsync(Biblioteca.DTO.JugadorDTO jugadorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/CancelarPartida", ReplyAction="http://tempuri.org/IHangmanService/CancelarPartidaResponse")]
        Biblioteca.DTO.ResponsePartidaDTO CancelarPartida(string codigoPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHangmanService/CancelarPartida", ReplyAction="http://tempuri.org/IHangmanService/CancelarPartidaResponse")]
        System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> CancelarPartidaAsync(string codigoPartida);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHangmanServiceChannel : HangmanGame_Cliente.HangmanServicioReferencia.IHangmanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HangmanServiceClient : System.ServiceModel.ClientBase<HangmanGame_Cliente.HangmanServicioReferencia.IHangmanService>, HangmanGame_Cliente.HangmanServicioReferencia.IHangmanService {
        
        public HangmanServiceClient() {
        }
        
        public HangmanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HangmanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HangmanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HangmanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Biblioteca.DTO.ResponseDTO Autenticacion(string correo, string contrasena) {
            return base.Channel.Autenticacion(correo, contrasena);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponseDTO> AutenticacionAsync(string correo, string contrasena) {
            return base.Channel.AutenticacionAsync(correo, contrasena);
        }
        
        public Biblioteca.DTO.ResponsePalabrasConIdDTO ObtenerPalabrasPorCategoria(string categoria) {
            return base.Channel.ObtenerPalabrasPorCategoria(categoria);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePalabrasConIdDTO> ObtenerPalabrasPorCategoriaAsync(string categoria) {
            return base.Channel.ObtenerPalabrasPorCategoriaAsync(categoria);
        }
        
        public Biblioteca.DTO.ResponsePartidaDTO CrearPartida(int idAdivinador, int idPalabra, string codigo, int idIdiomaPartida) {
            return base.Channel.CrearPartida(idAdivinador, idPalabra, codigo, idIdiomaPartida);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> CrearPartidaAsync(int idAdivinador, int idPalabra, string codigo, int idIdiomaPartida) {
            return base.Channel.CrearPartidaAsync(idAdivinador, idPalabra, codigo, idIdiomaPartida);
        }
        
        public Biblioteca.DTO.ResponsePartidaDTO ObtenerPartidasDisponibles() {
            return base.Channel.ObtenerPartidasDisponibles();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> ObtenerPartidasDisponiblesAsync() {
            return base.Channel.ObtenerPartidasDisponiblesAsync();
        }
        
        public Biblioteca.DTO.ResponsePartidaDTO UnirsePartida(string codigoPartida, int idJugador) {
            return base.Channel.UnirsePartida(codigoPartida, idJugador);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> UnirsePartidaAsync(string codigoPartida, int idJugador) {
            return base.Channel.UnirsePartidaAsync(codigoPartida, idJugador);
        }
        
        public Biblioteca.DTO.ResponsePartidaDTO ObtenerEstadoPartida(string codigoPartida) {
            return base.Channel.ObtenerEstadoPartida(codigoPartida);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> ObtenerEstadoPartidaAsync(string codigoPartida) {
            return base.Channel.ObtenerEstadoPartidaAsync(codigoPartida);
        }
        
        public Biblioteca.DTO.ResponseResultadoDTO GuardarResultado(int idJugador, int idPartida, bool gano, bool esAbandono) {
            return base.Channel.GuardarResultado(idJugador, idPartida, gano, esAbandono);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponseResultadoDTO> GuardarResultadoAsync(int idJugador, int idPartida, bool gano, bool esAbandono) {
            return base.Channel.GuardarResultadoAsync(idJugador, idPartida, gano, esAbandono);
        }
        
        public Biblioteca.DTO.ResponseEstadisticaDTO ObtenerEstadisticasPorJugador(int idJugador) {
            return base.Channel.ObtenerEstadisticasPorJugador(idJugador);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponseEstadisticaDTO> ObtenerEstadisticasPorJugadorAsync(int idJugador) {
            return base.Channel.ObtenerEstadisticasPorJugadorAsync(idJugador);
        }
        
        public Biblioteca.DTO.ResponseDTO RegistrarJugador(Biblioteca.DTO.JugadorDTO jugadorDTO) {
            return base.Channel.RegistrarJugador(jugadorDTO);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponseDTO> RegistrarJugadorAsync(Biblioteca.DTO.JugadorDTO jugadorDTO) {
            return base.Channel.RegistrarJugadorAsync(jugadorDTO);
        }
        
        public Biblioteca.DTO.ResponseDTO ActualizarJugador(Biblioteca.DTO.JugadorDTO jugadorDTO) {
            return base.Channel.ActualizarJugador(jugadorDTO);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponseDTO> ActualizarJugadorAsync(Biblioteca.DTO.JugadorDTO jugadorDTO) {
            return base.Channel.ActualizarJugadorAsync(jugadorDTO);
        }
        
        public Biblioteca.DTO.ResponsePartidaDTO CancelarPartida(string codigoPartida) {
            return base.Channel.CancelarPartida(codigoPartida);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.DTO.ResponsePartidaDTO> CancelarPartidaAsync(string codigoPartida) {
            return base.Channel.CancelarPartidaAsync(codigoPartida);
        }
    }
}
